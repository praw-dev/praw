from .base import RedditBase as RedditBase
from .mixins import FullnameMixin as FullnameMixin, InboxableMixin as InboxableMixin, ThingModerationMixin as ThingModerationMixin, UserContentMixin as UserContentMixin
from typing import Any, Optional
from typing import Any, Optional

from .base import RedditBase as RedditBase
from .mixins import FullnameMixin as FullnameMixin, \
    InboxableMixin as InboxableMixin, \
    ThingModerationMixin as ThingModerationMixin, \
    UserContentMixin as UserContentMixin


class Comment(InboxableMixin, UserContentMixin, FullnameMixin, RedditBase):
    MISSING_COMMENT_MESSAGE: str = ...
    STR_FIELD: str = ...
    @staticmethod
    def id_from_url(url: Any): ...
    @property
    def is_root(self): ...
    def mod(self): ...
    @property
    def replies(self): ...
    @property
    def submission(self): ...
    @submission.setter
    def submission(self, submission: Any) -> None: ...
    id: Any = ...
    def __init__(self, reddit: Any, id: Optional[Any] = ..., url: Optional[Any] = ..., _data: Optional[Any] = ...) -> None: ...
    def __setattr__(self, attribute: Any, value: Any) -> None: ...
    def parent(self): ...
    def refresh(self): ...

class CommentModeration(ThingModerationMixin):
    REMOVAL_MESSAGE_API: str = ...
    thing: Any = ...
    def __init__(self, comment: Any) -> None: ...
