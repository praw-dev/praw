from ..listing.mixins import RedditorListingMixin as RedditorListingMixin
from .base import RedditBase as RedditBase
from .mixins import FullnameMixin as FullnameMixin, MessageableMixin as MessageableMixin
from typing import Any, Optional
from typing import Any, Optional

from .base import RedditBase as RedditBase
from .mixins import FullnameMixin as FullnameMixin, \
    MessageableMixin as MessageableMixin
from ..listing.mixins import RedditorListingMixin as RedditorListingMixin


class Redditor(MessageableMixin, RedditorListingMixin, FullnameMixin, RedditBase):
    STR_FIELD: str = ...
    @classmethod
    def from_data(cls, reddit: Any, data: Any): ...
    def stream(self): ...
    name: Any = ...
    def __init__(self, reddit: Any, name: Optional[Any] = ..., fullname: Optional[Any] = ..., _data: Optional[Any] = ...) -> None: ...
    def block(self) -> None: ...
    def friend(self, note: Optional[Any] = ...) -> None: ...
    def friend_info(self): ...
    def gild(self, months: int = ...) -> None: ...
    def moderated(self): ...
    def multireddits(self): ...
    def trophies(self): ...
    def unblock(self) -> None: ...
    def unfriend(self) -> None: ...

class RedditorStream:
    redditor: Any = ...
    def __init__(self, redditor: Any) -> None: ...
    def comments(self, **stream_options: Any): ...
    def submissions(self, **stream_options: Any): ...
