from ...const import API_PATH as API_PATH
from ...util import snake_case_keys as snake_case_keys
from .base import RedditBase as RedditBase
from typing import Any, Optional

class ModmailConversation(RedditBase):
    STR_FIELD: str = ...
    @classmethod
    def parse(cls, data: Any, reddit: Any, convert_objects: bool = ...): ...
    id: Any = ...
    def __init__(self, reddit: Any, id: Optional[Any] = ..., mark_read: bool = ..., _data: Optional[Any] = ...) -> None: ...
    def archive(self) -> None: ...
    def highlight(self) -> None: ...
    def mute(self) -> None: ...
    def read(self, other_conversations: Optional[Any] = ...) -> None: ...
    def reply(self, body: Any, author_hidden: bool = ..., internal: bool = ...): ...
    def unarchive(self) -> None: ...
    def unhighlight(self) -> None: ...
    def unmute(self) -> None: ...
    def unread(self, other_conversations: Optional[Any] = ...) -> None: ...

class ModmailObject(RedditBase):
    AUTHOR_ATTRIBUTE: str = ...
    STR_FIELD: str = ...
    def __setattr__(self, attribute: Any, value: Any) -> None: ...

class ModmailAction(ModmailObject): ...
class ModmailMessage(ModmailObject): ...
