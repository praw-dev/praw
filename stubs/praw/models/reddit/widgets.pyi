from ...const import API_PATH as API_PATH
from ...util.cache import cachedproperty as cachedproperty
from ..base import PRAWBase as PRAWBase
from ..list.base import BaseList as BaseList
from json import JSONEncoder
from typing import Any

class Button(PRAWBase): ...
class Image(PRAWBase): ...
class ImageData(PRAWBase): ...
class MenuLink(PRAWBase): ...

class Submenu(BaseList):
    CHILD_ATTRIBUTE: str = ...

class SubredditWidgets(PRAWBase):
    def id_card(self): ...
    def items(self): ...
    def mod(self): ...
    def moderators_widget(self): ...
    def sidebar(self): ...
    def topbar(self): ...
    def refresh(self) -> None: ...
    def __getattr__(self, attr: Any): ...
    subreddit: Any = ...
    progressive_images: bool = ...
    def __init__(self, subreddit: Any) -> None: ...

class SubredditWidgetsModeration:
    def __init__(self, subreddit: Any, reddit: Any) -> None: ...
    def add_button_widget(self, short_name: Any, description: Any, buttons: Any, styles: Any, **other_settings: Any): ...
    def add_calendar(self, short_name: Any, google_calendar_id: Any, requires_sync: Any, configuration: Any, styles: Any, **other_settings: Any): ...
    def add_community_list(self, short_name: Any, data: Any, styles: Any, description: str = ..., **other_settings: Any): ...
    def add_custom_widget(self, short_name: Any, text: Any, css: Any, height: Any, image_data: Any, styles: Any, **other_settings: Any): ...
    def add_image_widget(self, short_name: Any, data: Any, styles: Any, **other_settings: Any): ...
    def add_menu(self, data: Any, **other_settings: Any): ...
    def add_post_flair_widget(self, short_name: Any, display: Any, order: Any, styles: Any, **other_settings: Any): ...
    def add_text_area(self, short_name: Any, text: Any, styles: Any, **other_settings: Any): ...
    def reorder(self, new_order: Any, section: str = ...) -> None: ...
    def upload_image(self, file_path: Any): ...

class Widget(PRAWBase):
    @property
    def mod(self): ...
    def __eq__(self, other: Any) -> Any: ...
    subreddit: str = ...
    id: str = ...
    def __init__(self, reddit: Any, _data: Any) -> None: ...

class ButtonWidget(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...

class Calendar(Widget): ...

class CommunityList(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...

class CustomWidget(Widget):
    def __init__(self, reddit: Any, _data: Any) -> None: ...

class IDCard(Widget): ...

class ImageWidget(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...

class Menu(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...

class ModeratorsWidget(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...
    def __init__(self, reddit: Any, _data: Any) -> None: ...

class PostFlairWidget(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...

class RulesWidget(Widget, BaseList):
    CHILD_ATTRIBUTE: str = ...
    def __init__(self, reddit: Any, _data: Any) -> None: ...

class TextArea(Widget): ...

class WidgetEncoder(JSONEncoder):
    def default(self, o: Any): ...

class WidgetModeration:
    widget: Any = ...
    def __init__(self, widget: Any, subreddit: Any, reddit: Any) -> None: ...
    def delete(self) -> None: ...
    def update(self, **kwargs: Any): ...
