from .base import RedditBase as RedditBase
from typing import Any, Optional
from typing import Any, Optional

from .base import RedditBase as RedditBase


class WikiPage(RedditBase):
    __hash__: Any = ...
    @staticmethod
    def _revision_generator(subreddit: Any, url: Any, generator_kwargs: Any) -> None: ...
    def mod(self): ...
    def __eq__(self, other: Any) -> Any: ...
    name: Any = ...
    _revision: Any = ...
    subreddit: Any = ...
    def __init__(self, reddit: Any, subreddit: Any, name: Any, revision: Optional[Any] = ..., _data: Optional[Any] = ...) -> None: ...
    def __repr__(self): ...
    def __str__(self): ...
    def _fetch_info(self): ...
    def _fetch_data(self): ...
    _fetched: bool = ...
    def _fetch(self) -> None: ...
    def edit(self, content: Any, reason: Optional[Any] = ..., **other_settings: Any) -> None: ...
    def revision(self, revision: Any): ...
    def revisions(self, **generator_kwargs: Any): ...

class WikiPageModeration:
    wikipage: Any = ...
    def __init__(self, wikipage: Any) -> None: ...
    def add(self, redditor: Any) -> None: ...
    def remove(self, redditor: Any) -> None: ...
    def settings(self): ...
    def update(self, listed: Any, permlevel: Any, **other_settings: Any): ...
