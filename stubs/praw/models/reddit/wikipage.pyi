from ...const import API_PATH as API_PATH
from ...util.cache import cachedproperty as cachedproperty
from ..listing.generator import ListingGenerator as ListingGenerator
from .base import RedditBase as RedditBase
from .redditor import Redditor as Redditor
from typing import Any, Optional

class WikiPage(RedditBase):
    __hash__: Any = ...
    def mod(self): ...
    def __eq__(self, other: Any) -> Any: ...
    name: Any = ...
    subreddit: Any = ...
    def __init__(self, reddit: Any, subreddit: Any, name: Any, revision: Optional[Any] = ..., _data: Optional[Any] = ...) -> None: ...
    def edit(self, content: Any, reason: Optional[Any] = ..., **other_settings: Any) -> None: ...
    def revision(self, revision: Any): ...
    def revisions(self, **generator_kwargs: Any): ...

class WikiPageModeration:
    wikipage: Any = ...
    def __init__(self, wikipage: Any) -> None: ...
    def add(self, redditor: Any) -> None: ...
    def remove(self, redditor: Any) -> None: ...
    def settings(self): ...
    def update(self, listed: Any, permlevel: Any, **other_settings: Any): ...
