from typing import TypeVar, Collection
from typing import Union

from .base import BaseListingMixin as BaseListingMixin
from .gilded import GildedListingMixin as GildedListingMixin
from ...reddit.comment import Comment
from ...reddit.submission import Submission
from ....reddit import Reddit
from ....util.cache import cachedproperty

T = TypeVar("T")


class RedditorListingMixin(BaseListingMixin, GildedListingMixin):
    @cachedproperty
    def comments(self) -> SubListing[Comment]: ...
    @cachedproperty
    def submissions(self) -> SubListing[Submission]: ...
    def downvoted(self, **generator_kwargs: str) -> Union[Comment, Submission]: ...
    def gildings(self, **generator_kwargs: str) -> Union[Comment, Submission]: ...
    def hidden(self, **generator_kwargs: str) -> Union[Comment, Submission]: ...
    def saved(self, **generator_kwargs: str) -> Union[Comment, Submission]: ...
    def upvoted(self, **generator_kwargs: str) -> Union[Comment, Submission]: ...

class SubListing(BaseListingMixin, Collection[T]):
    def __init__(self, reddit: Reddit, base_path: str, subpath: str) -> SubListing: ...
