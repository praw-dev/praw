from typing import List, Union, Dict, Optional

from . import ListingGenerator
from .base import PRAWBase as PRAWBase
from .preferences import Preferences
from .reddit.multi import Multireddit
from .reddit.redditor import Redditor
from .reddit.subreddit import Subreddit
from ..reddit import Reddit


class User(PRAWBase):
    def preferences(self) -> Preferences: ...
    def __init__(self, reddit: Reddit) -> User: ...
    def blocked(self) -> List[Redditor]: ...
    def contributor_subreddits(self, **generator_kwargs: str) -> ListingGenerator[Subreddit]: ...
    def friends(self) -> List[Redditor]: ...
    def karma(self) -> Dict[Subreddit, Union[str, int]]: ...
    def me(self, use_cache: bool = ...) -> Optional[Redditor]: ...
    def moderator_subreddits(self, **generator_kwargs: str) -> ListingGenerator[Subreddit]: ...
    def multireddits(self) -> List[Multireddit]: ...
    def subreddits(self, **generator_kwargs: str) -> ListingGenerator[Subreddit]: ...
