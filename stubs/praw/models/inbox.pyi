from typing import List, Generator, NoReturn, Union

from . import Message, ListingGenerator
from .base import PRAWBase as PRAWBase
from .reddit.comment import Comment


class Inbox(PRAWBase):
    def all(self, **generator_kwargs: str) -> Generator[Union[Comment, Message]]: ...
    def collapse(self, items: List[Message]) -> NoReturn: ...
    def comment_replies(self, **generator_kwargs: str) -> ListingGenerator[Comment]: ...
    def mark_read(self, items: List[Message]) -> NoReturn: ...
    def mark_unread(self, items: List[Message]) -> NoReturn: ...
    def mentions(self, **generator_kwargs: str) -> ListingGenerator[Comment]: ...
    def message(self, message_id: str) -> Message: ...
    def messages(self, **generator_kwargs: str) -> ListingGenerator[Message]: ...
    def sent(self, **generator_kwargs: str) -> ListingGenerator[Message]: ...
    def stream(self, **stream_options: str) -> ListingGenerator[Message]: ...
    def submission_replies(self, **generator_kwargs: str) -> ListingGenerator[Comment]: ...
    def uncollapse(self, items: List[Message]) -> NoReturn: ...
    def unread(self, mark_read: bool = ..., **generator_kwargs: str) -> Generator[Union[Comment, Message]]: ...
