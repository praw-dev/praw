from typing import Any, Optional

from .config import Config as Config
from .models import Auth, Front, Inbox, LiveHelper, MultiredditHelper, Redditors, SubredditHelper, Subreddits

UPDATE_CHECKER_MISSING: bool

class Reddit:
    update_checked: bool = ...
    @property
    def _next_unique(self): ...
    @property
    def read_only(self): ...
    _core: Any = ...
    @read_only.setter
    def read_only(self, value: Any) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *_args: Any) -> None: ...
    _objector: Any = ...
    _unique_counter: int = ...
    config: Config = ...
    auth: Auth = ...
    front: Front = ...
    inbox: Inbox = ...
    live: LiveHelper = ...
    multireddit: MultiredditHelper = ...
    redditors: Redditors = ...
    subreddit: SubredditHelper = ...
    subreddits: Subreddits = ...
    user: User = ...
    def __init__(self, site_name: Optional[Any] = ..., requestor_class: Optional[Any] = ..., requestor_kwargs: Optional[Any] = ..., **config_settings: Any) -> None: ...
    def _check_for_update(self) -> None: ...
    def _prepare_objector(self) -> None: ...
    def _prepare_prawcore(self, requestor_class: Optional[Any] = ..., requestor_kwargs: Optional[Any] = ...) -> None: ...
    _read_only_core: Any = ...
    def _prepare_trusted_prawcore(self, requestor: Any) -> None: ...
    def _prepare_untrusted_prawcore(self, requestor: Any) -> None: ...
    def comment(self, id: Optional[Any] = ..., url: Optional[Any] = ...): ...
    def domain(self, domain: Any): ...
    def get(self, path: Any, params: Optional[Any] = ...): ...
    def info(self, fullnames: Optional[Any] = ..., url: Optional[Any] = ...): ...
    def patch(self, path: Any, data: Optional[Any] = ...): ...
    def post(self, path: Any, data: Optional[Any] = ..., files: Optional[Any] = ..., params: Optional[Any] = ...): ...
    def put(self, path: Any, data: Optional[Any] = ...): ...
    def random_subreddit(self, nsfw: bool = ...): ...
    def redditor(self, name: Optional[Any] = ..., fullname: Optional[Any] = ...): ...
    def request(self, method: Any, path: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., files: Optional[Any] = ...): ...
    def submission(self, id: Optional[Any] = ..., url: Optional[Any] = ...): ...
