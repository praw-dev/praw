jobs:
  complete_coveralls:
    needs: test-multi-python
    runs-on: ubuntu-latest
    steps:
    - uses: coverallsapp/github-action@57daa114
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true

  lint-multi-os:
    name: Lint ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - uses: actions/cache@v1
      with:
        key: v0-${{ runner.os }}-pip-lint-${{ hashFiles('setup.py') }}
        path: ~/.cache/pip
        restore-keys: |
          v0-${{ runner.os }}-pip-lint-
          v0-${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[lint]
    - name: Run flynt
      run: flynt -vdf -tc -ll 1000 .
    - name: Run black
      run: black --check --verbose .
    - name: Run flake8
      run: flake8 --exclude docs --statistics
    - name: Check other phrase usages
      run: python ./tools/static_word_checks.py
    - name: Check documentation
      run: python ./tools/check_documentation.py
    - name: Check docstrings
      run: python ./tools/check_docstring.py
    - name: Run pydocstyle
      run: pydocstyle praw
    - name: Run sphinx
      run: sphinx-build --keep-going docs/ /tmp/foo
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

  lint-multi-python:
    name: Lint Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - uses: actions/cache@v1
      with:
        key: v0-${{ runner.os }}-pip-lint-${{ hashFiles('setup.py') }}
        path: ~/.cache/pip
        restore-keys: |
          v0-${{ runner.os }}-pip-lint-
          v0-${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[lint]
    - name: Check other phrase usages
      run: python ./tools/static_word_checks.py
    - name: Run flynt
      run: flynt -vdf -tc -ll 1000 .
    - name: Run black
      run: black --check --verbose .
    - name: Run flake8
      run: flake8 --exclude docs --statistics
    - name: Check documentation
      run: python ./tools/check_documentation.py
    - name: Check docstrings
      run: python ./tools/check_docstring.py
    - name: Run pydocstyle
      run: pydocstyle praw
    - name: Run sphinx
      run: sphinx-build --keep-going docs/ /tmp/foo
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

  test-multi-os:
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - uses: actions/cache@v1
      with:
        key: v0-${{ runner.os }}-pip-test-${{ hashFiles('setup.py') }}
        path: ~/.cache/pip
        restore-keys: |
          v0-${{ runner.os }}-pip-test-
          v0-${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Test with pytest
      run: pytest
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

  test-multi-python:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - uses: actions/cache@v1
      with:
        key: v0-${{ runner.os }}-pip-test-${{ hashFiles('setup.py') }}
        path: ~/.cache/pip
        restore-keys: |
          v0-${{ runner.os }}-pip-test-
          v0-${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
        pip install https://github.com/bboe/coveralls-python/archive/github_actions.zip
    - name: Test with pytest
      run: coverage run --source praw --module pytest
    - env:
        COVERALLS_PARALLEL: true
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Submit to coveralls
      run: coveralls
    - name: Check coverage
      run: coverage report -m --fail-under=100
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

  test-network:
    name: Test Network Request
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - uses: actions/cache@v1
      with:
        key: v0-${{ runner.os }}-pip-test-${{ hashFiles('setup.py') }}
        path: ~/.cache/pip
        restore-keys: |
          v0-${{ runner.os }}-pip-test-
          v0-${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Run network test
      run: pytest tests/integration/test_github_actions.py::test_github_actions
      env:
        NETWORK_TEST_CLIENT_ID: ${{ secrets.NETWORK_TEST_CLIENT_ID }}
        NETWORK_TEST_CLIENT_SECRET: ${{ secrets.NETWORK_TEST_CLIENT_SECRET }}


name: CI
on: [pull_request, push]
